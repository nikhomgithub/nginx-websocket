//https://www.youtube.com/watch?v=1OU5ngq-WyM&list=PLQlWzK5tU-gDyxC1JTpyC2avvJlt3hrIh&index=1
//Juriy Bura
cloud service
  amazon, google, azure ==> best service for big project, high price, multiserver

Iaas 
  digitalOcean, Linode, Amazon Lightsail ==> best for small-medium project,multi server, low price

Paas
  heroku, nodejitsu, ==> best for study , small node server project.

============================================
Node application
from ==> https://github.com/Juriy/easyio   //web socket nodejs
============================================
Digital Ocean
- sign up (credit card)
- create a droplet        
  //DigitalOcean (get $10 credits) https://m.do.co/c/e79071ae6b49  ||  Sample app: 
  (10$/month, ssh key at $~/.ssh/id_rsa.pub ,os, one-click-app, server-location, host-name 4 droplet )
  
============================================
create DNS
godady.com, HostGator, Namecheap, eNom, Gandi, 1&1  etc...
- nanogram.io

DNS record at digital ocean
Hostname        value
nanogram.io     direct to 188.166.228.208

============================================
linux on server
- log in to server
  $ssh root@188.166.228.208
- update/upgrade linux
  $yum -y update
- install linux-package
  $yum -y groupinstall "Development Tools"
  $yum -y install vim net-tools
- install node js 
  ..... see nodejs website
  $node -v
  $npm -v
- install yarn (if need)
  $sudo yum -y install yarn
  #yarn --version

  add a normal user
- #adduser nikhom
- #sudo su -nikhom
- $whoami
- $mkdir .ssh
- chmod 700 .ssh
- touch .ssh/authorized_keys
- chmod 600 .ssh/authorized_keys
  //copy-past public_key from local machine ~/.ssh/id_rsa.pub to "server" ./ssh/authorized_keys
- log in to server with nikhom 
  $ssh nikhom@188.166.228.208

  add a root user (if need)
  #adduser rootadmin1
  #usermod -aG wheel rootadmin1
  
=============================================
linux command
- $shutdown -r now       //to shut down & restart linux
- $ping nanogram.io or $ping 188.166.228.208
- $curl nanogram.io:8181 //to access to application in this interface & port 
- $netstat -tln          //tcp listenning numberOfip-address
- file permision(DAC)        RWX RWX RWX (user, group, everyone)
- $ls -l                 //to show file permission
- ps -auxZ | grp nginx   //to show process running by nginx 
=============================================
SElinx (Security Advance Linux)

- to block server application to connect to file or another application in the same machine
- $getenforce      //to check set-up-value of SElinux
                   //enforcing === enable,enforcing
                   //permissiv === enable (loggin), not enforcing (block) 
                   //Disable
- $ls -lZ /usr/share/nginx/html         //to show SElinux
                                        //system_u:object_r:httpd_sys_content_t:s0 index.html

- allow nginx server to connect to public/static file or other application 
  
  #setsebool -P httpd_can_network_connect on                  //allow http server to connect other backends
  #setsebool -P httpd_enable_homedirs on                      //allow http server to access user folder
  #chcon -Rt httpd_sys_content_t /home/nikhom/easyio/public   //allow http server to read file from user folder
=============================================
npm/yarn dependency on server
- #npm install -g pm2 http-server

=============================================
pm2 command
- pm2 startup systemd -u nikhom --hp /home/nikhom     //tell linux to run pm2 as pm2 save at restart
- pm2 start --name easyio main.js  //create for first time
- pm2 ls                           //check pm2 status
- pm2 save                         //save current runing in pm2 , it will run again when restart
- pm2 stop easyio                  //stop easyio

=============================================
nodejs command
const hostname = process.argv[2] || null       //null = default interface or 0.0.0.0
server.listen(port,hostname,(err)=>{})

=============================================
script for transfer project to from local to server 
at local 
- $touch deploy.sh

#!bin/bash
tar czf easyio.tar.gz main.js package.json yarn.lock public LICENSE
scp easyiotar.gz nikhom@188.166.228.208:~
rm easyio.tar.gz

ssh nikhom@188.166.228.208 <<'ENDSSH'
pm2 stop easyio
rm -rf easyio
mkdir easyio
tar xf easyio.tar.gz -C easyio 
rm easyio.tar.gz
cd easyio
npm install
pm2 start easyio
ENDSSH

at local 
- $./deploy.sh
==============================================
Network Interface
- each machine have many interface (ip-address) to connect many network


- 0.0.0.0   ==> public interface every network can access application which use this interface
                this is default interface for node.js 
                server.listen(port,()=>{})  === server.listen(port,0.0.0.0,()=>{}) 

- 127.0.0.01 ==> localhost
- 192.168.1.104 ==> normal interface in home network
- digital also provide private interface for internal server-server of digital ocean
  for quick performance 

==============================================
NGINX 











  
  
  

  



